/*************************************************************************************************************************
**************************************************************************************************************************
****************************************BORRADO DE TABLAS*****************************************************************
**************************************************************************************************************************
**************************************************************************************************************************/
--DESCOMENTAR SI SE OCUPA EJECUTAR

/*DROP TABLE TBCORREOS;
DROP TABLE TBCATEGORIA;
DROP TABLE TBDONACION;
DROP TABLE TB_TIPODONACION;
DROP TABLE TBTELEFONOS;
DROP TABLE TBUSUARIOS;
DROP TABLE TBROL;
DROP TABLE TBSEDE;
DROP TABLE TBLOCALIZACION;*/


/*************************************************************************************************************************
**************************************************************************************************************************
****************************************CREACION DE TABLAS****************************************************************
**************************************************************************************************************************
**************************************************************************************************************************/

CREATE TABLE TBUsuarios(
    ATId_Usuario INT GENERATED BY DEFAULT ON NULL AS IDENTITY,
	ATUsuario varchar2(50),
    ATContrasenna varchar2(150),
    ATNombre varchar2(50),
    ATApellido_1 varchar2(50),
	ATApellido_2 varchar2(50),
    ATCedula varchar2(30),
    ATActivo char(1) check ( ATActivo in ( '0', '1' )),
    ATRol varchar2(50),
    PRIMARY KEY(ATCedula)
);

ALTER TABLE TBUsuarios ADD CONSTRAINT fk_rol FOREIGN KEY (ATRol) REFERENCES TBRol (ATTipoRol);

------------------------------------------------------------------------------------------

CREATE TABLE TBRol(
    ATRol INT GENERATED BY DEFAULT ON NULL AS IDENTITY,
	ATTipoRol varchar2(50),
    PRIMARY KEY(ATTipoRol)
);

-------------------------------------------------------------------------------------------

CREATE TABLE TBSedes (
    ATId_Sede INT GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ATNombreSede varchar2(30),
    ATId_Localizacion int,
    PRIMARY KEY(ATNombreSede) /*La sede es el primary key porque el nombre de cada sede es unico y para poner usarlo en correos y telefonos*/
);

ALTER TABLE TBSedes ADD CONSTRAINT fk_sede_localizacion FOREIGN KEY (ATId_Localizacion) REFERENCES TBLocalizacion (ATId_Localizacion);

-------------------------------------------------------------------------------------------

CREATE TABLE TBLocalizacion(
    ATId_Localizacion INT GENERATED BY DEFAULT ON NULL AS IDENTITY,
	ATProvincia varchar2(50),
    ATCanton varchar2(50),
    ATDistrito varchar2(50),
    ATDireccionExacta varchar2(100),
    PRIMARY KEY(ATId_Localizacion)
);
-------------------------------------------------------------------------------------------

CREATE TABLE TBCATEGORIA (
    ATID_CATEGORIA INT GENERATED BY DEFAULT ON NULL AS IDENTITY,
    AT_DESCRIPCION varchar(30),
    PRIMARY KEY(AT_DESCRIPCION) /*El nombre de las categorias nunca va a cambiar por eso cada nombre puede ser primary key*/
);

-------------------------------------------------------------------------------------------

CREATE TABLE TBCorreos(
    ATId_Correo INT GENERATED BY DEFAULT ON NULL AS IDENTITY,
	ATCorreo varchar2(150),
    ATDuenoCorreo varchar2(30),
    ATCategoriaCorreo varchar2(30),
    PRIMARY KEY(ATId_Correo)
);

ALTER TABLE TBCorreos ADD CONSTRAINT fk_categoria_correo FOREIGN KEY (ATCategoriaCorreo) REFERENCES TBCATEGORIA (AT_DESCRIPCION);

-------------------------------------------------------------------------------------------

CREATE TABLE TBTelefonos(
    ATId_Telefono INT GENERATED BY DEFAULT ON NULL AS IDENTITY,
	ATTelefono varchar2(150),
    ATDuenoTelefono varchar2(30),
    ATCategoriaTelefono varchar2(30),
    PRIMARY KEY(ATId_Telefono)
);

ALTER TABLE TBTelefonos ADD CONSTRAINT fk_categoria_telefono FOREIGN KEY (ATCategoriaTelefono) REFERENCES TBCATEGORIA (AT_DESCRIPCION);

--------------------------------------------------------------------------------------------

CREATE TABLE TB_TipoDonacion(
    ATId_TipoDonacion INT GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ATTipo_Donacion varchar2(500),
    PRIMARY KEY(ATId_TipoDonacion)
);

--------------------------------------------------------------------------------------------

CREATE TABLE TBDonacion(
    ATId_Donacion INT GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ATFecha date,
    ATProcedencia varchar2(80),
    ATId_TDonacion int,
    ATCedulaUsuario varchar(30),
    ATNombreSede varchar2(30),
    ATCantidad int,
    ATDescripcion varchar2(500),
    ATMetodoPago varchar2(60),
    ATMonto int,
    PRIMARY KEY(ATId_Donacion) 
);

ALTER TABLE TBDonacion ADD CONSTRAINT fk_donacion_especie_usuario FOREIGN KEY (ATCedulaUsuario) REFERENCES TBUsuarios (ATCedula);
ALTER TABLE TBDonacion ADD CONSTRAINT fk_donacion_especie_sede FOREIGN KEY (ATNombreSede) REFERENCES TBSedes (ATNombreSede);
ALTER TABLE TBDonacion ADD CONSTRAINT fk_donacion_especie FOREIGN KEY (ATId_TDonacion) REFERENCES TB_TipoDonacion (ATId_TipoDonacion);


/*************************************************************************************************************************
**************************************************************************************************************************
****************************************SE INSERTAN DATOS*****************************************************************
**************************************************************************************************************************
**************************************************************************************************************************/

--ROLES DEFINIDOS PARA USUARIO

INSERT INTO TBRol VALUES (1,'Administrador');
INSERT INTO TBRol VALUES (2,'Empleado');

--INSERTAR TABLA CATEGORIA -------> VALORES QUEMADOS DE LA TABLA DE CATEGORIA
INSERT INTO TBCATEGORIA (AT_DESCRIPCION) VALUES ('Usuario');
INSERT INTO TBCATEGORIA (AT_DESCRIPCION) VALUES ('Sede');

/*----------------------------------------------------------------------------*/

--USUARIOS DE PRUEBA

--Rol de administrador
INSERT INTO TBUsuarios (ATUsuario,ATContrasenna,ATNombre,ATApellido_1,ATApellido_2,ATCedula,ATActivo,ATRol)
VALUES ('UsuarioEjemplo','12345','Nombre','Apellido1','Apellido2','305380675',1,'Administrador');

--Rol de empleado
INSERT INTO TBUsuarios (ATUsuario,ATContrasenna,ATNombre,ATApellido_1,ATApellido_2,ATCedula,ATActivo,ATRol)
VALUES ('UsuarioEjemplo','12345','Nombre','Apellido1','Apellido2','305380675',1,'Empleado');
    
/*************************************************************************************************************************
**************************************************************************************************************************
****************************************PROCEDIMIENTOS ALMACENADOS********************************************************
**************************************************************************************************************************
**************************************************************************************************************************/   

--Para ingresar donaciones
CREATE OR REPLACE PROCEDURE INSERTAR_DONACION 
(pFecha IN date, pProcedencia IN varchar2, pTipoDonacion IN int, pCedulaUsuario IN varchar2, pSede IN varchar2, pCantidad IN int, pDescripcion IN varchar2, pMetodoPago IN varchar2, pMonto IN int)
AS
BEGIN
    INSERT INTO TBDonacion (ATFecha,ATProcedencia,ATId_TDonacion,ATCedulaUsuario,ATNombreSede,ATCantidad,ATDescripcion,ATMetodoPago,ATMonto)
    VALUES (pFecha,pProcedencia,pTipoDonacion,pCedulaUsuario,pSede,pCantidad,pDescripcion,pMetodoPago,pMonto);
END;

/*----------------------------------------------------------------------------*/

--Para LOGIN
CREATE OR REPLACE PROCEDURE USUARIO_LOGIN (pATUSUARIO IN VARCHAR2, pATCONTRASENNA IN VARCHAR2, pVERIFICAR OUT NUMBER)
AS
VERIFICAR NUMBER;
BEGIN
    SELECT COUNT(1)
    INTO VERIFICAR
    FROM TBUSUARIOS
    WHERE pATUSUARIO = ATUSUARIO AND pATCONTRASENNA = ATCONTRASENNA;
    IF VERIFICAR = 1 THEN
        pVERIFICAR := 1;
    ELSE
        pVERIFICAR := 0;
    END IF;
END;

DECLARE
ROL NUMBER;
BEGIN
    USUARIO_LOGIN('UsuarioPrueba','12345',ROL);
    DBMS_OUTPUT.PUT_LINE(ROL);
COMMIT;
END;

--Esto es solo para verificar que el procedimiento almacenado este correcto
/*SET SERVEROUTPUT ON;

DECLARE
ROL NUMBER;
RESULTADO BOOLEAN;
BEGIN
    USUARIO_LOGIN('UsuarioPrueba','12345',ROL,RESULTADO);
    DBMS_OUTPUT.PUT_LINE(ROL);
COMMIT;
END;*/

/*---------------------------------------------------------------------------*/
--Ingresar usuario
CREATE OR REPLACE PROCEDURE Agregar_Usuario 
(pUsuario IN varchar2, pContrasenna IN varchar2, pNombre IN varchar2, pApellido_1 IN varchar2, pApellido_2 IN varchar2, pCedula IN varchar2, 
pRol IN varchar2)
AS 
BEGIN
    INSERT INTO TBUSUARIOS(ATUsuario,ATContrasenna,ATNombre,ATApellido_1,ATApellido_2,ATCedula,ATActivo,ATRol)
    VALUES (pUsuario,pContrasenna,pNombre,pApellido_1,pApellido_2,pCedula,1,pRol);
END;
--Ingresar correo
CREATE OR REPLACE PROCEDURE Agregar_Correo 
(pCorreo IN varchar2, pDuenoCorreo IN varchar2, pCategoriaCorreo IN varchar2)
AS 
BEGIN
    INSERT INTO TBCorreos(ATCorreo,ATDuenoCorreo,ATCategoriaCorreo)
    VALUES (pCorreo,pDuenoCorreo,pCategoriaCorreo);
END;
--Ingresar telefono
CREATE OR REPLACE PROCEDURE Agregar_Telefono 
(pTelefono IN varchar2, pDuenoTelefono IN varchar2, pCategoriaTelefono IN varchar2)
AS 
BEGIN
    INSERT INTO TBTelefonos(ATTelefono,ATDuenoTelefono,ATCategoriaTelefono)
    VALUES (pTelefono,pDuenoTelefono,pCategoriaTelefono);
END;
--Ver usuarios
CREATE OR REPLACE PROCEDURE Ver_Usuarios(registros out sys_refcursor)
AS
BEGIN
    OPEN registros FOR SELECT * FROM TBUSUARIOS;
END;
--Cargar cada dato de usuario por separado
CREATE OR REPLACE PROCEDURE Ver_Datos_Usuario(nombre out sys_refcursor,apellido_1 out sys_refcursor, pCedula in Varchar2)
AS
BEGIN
    OPEN nombre FOR SELECT ATNOMBRE FROM TBUSUARIOS WHERE ATCEDULA = pCedula;
    OPEN apellido_1 FOR SELECT ATAPELLIDO_1 FROM TBUSUARIOS WHERE ATCEDULA = pCedula;
END;

/*SI QUIERO SABER EL NUMERO DE UN USUARIO EN ESPECIFICO SOLO HAGO UN SELECT CON INNER JOIN*/

SELECT u.ATNombre, t.ATTelefono FROM TBUsuarios u INNER JOIN TBTelefonos t ON u.ATCedula = t.ATDuenoTelefono;